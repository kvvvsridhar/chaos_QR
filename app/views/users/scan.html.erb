<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Scanner</title>
    <script src="https://cdn.jsdelivr.net/npm/html5-qrcode/minified/html5-qrcode.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 20px 0;
        }
        #qr-reader {
            margin: 20px auto;
            width: 300px;
            display: none; /* Initially hidden */
        }
        .status {
            margin: 20px 0;
        }
        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            margin-top: 20px;
        }
        button:hover {
            background-color: #0056b3;
        }
        #scan-result {
            display: none;
            text-align: left;
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 15px;
            width: 300px;
            border-radius: 5px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <h1>QR Code Scanner</h1>
    <div class="container">
        <button id="start-scan-btn">Start Scanning</button>
        <button id="stop-scan-btn" style="display: none;">Stop Scanning</button>
        <div id="qr-reader"></div>
        <div class="status">
            <p id="scan-status">Click "Start Scanning" to begin.</p>
            <div id="scan-result">
                <h3>Scan Result</h3>
                <p id="scan-data"></p>
            </div>
        </div>
    </div>

    <script>
        const qrReader = new Html5Qrcode("qr-reader");
        let isScanning = false;

        document.getElementById("start-scan-btn").addEventListener("click", () => {
            document.getElementById("qr-reader").style.display = "block";
            document.getElementById("start-scan-btn").style.display = "none";
            document.getElementById("stop-scan-btn").style.display = "inline-block";
            document.getElementById("scan-status").innerText = "Scanning...";
            
            isScanning = true;

            qrReader.start(
                { facingMode: "environment" },
                { fps: 10, qrbox: 250 },
                onScanSuccess
            ).catch(err => {
                console.error("QR Reader Error:", err);
                document.getElementById("scan-status").innerText = `Error: ${err.message}`;
            });
        });

        document.getElementById("stop-scan-btn").addEventListener("click", () => {
            if (isScanning) {
                qrReader.stop().then(() => {
                    document.getElementById("qr-reader").style.display = "none";
                    document.getElementById("start-scan-btn").style.display = "inline-block";
                    document.getElementById("stop-scan-btn").style.display = "none";
                    document.getElementById("scan-status").innerText = "Scanning stopped.";
                }).catch(err => {
                    console.error("Error stopping the QR scanner:", err);
                });
                isScanning = false;
            }
        });

        function fetchLocation(callback) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const { latitude, longitude } = position.coords;
                    callback(`Lat: ${latitude.toFixed(6)}, Lng: ${longitude.toFixed(6)}`);
                }, () => {
                    callback("Location not available");
                });
            } else {
                callback("Geolocation not supported");
            }
        }

        function onScanSuccess(decodedText) {
            if (!isScanning) return; // Prevent processing if scanning has been stopped

            const idNumber = decodedText.trim(); // Expecting only id_number

            if (!idNumber) {
                document.getElementById("scan-status").innerText = "Invalid QR code.";
                return;
            }

            fetchLocation((location) => {
                // Send the id_number and location to Rails backend
                fetch('/users/update_from_qr', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ qr_data: idNumber, location: location })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById("scan-status").innerText = "Scan successful! User data updated.";
                        document.getElementById("scan-data").innerText = idNumber;
                        document.getElementById("scan-result").style.display = "block";
                    } else {
                        document.getElementById("scan-status").innerText = `Error: ${data.message}`;
                    }
                })
                .catch(error => {
                    document.getElementById("scan-status").innerText = `Error: ${error.message}`;
                });
            });
        }
    </script>
</body>
</html>
